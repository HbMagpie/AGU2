<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.my.mapper.UserMapper">
	<insert id="join">
		insert into user values(#{useremail},#{userpw},#{username},
		#{postnum},#{addr},#{detailaddress},#{seealso})
	</insert>
	<select id="getUserInfo" resultType="com.my.domain.UserDTO">
    select useremail, username, postnum, addr, detailaddress, seealso from user where useremail = #{useremail}
	</select>
	<select id="checkId" parameterType="string" resultType="_int">
		select count(useremail) from user where useremail = #{useremail}
	</select> 
	<select id="login" parameterType="com.my.domain.UserDTO" resultType="com.my.domain.UserDTO">
		select * from user where useremail = #{useremail} and binary(userpw) = #{userpw}
	</select>
	<select id="getUser" resultType="com.my.domain.UserDTO">
		select * from user where useremail = #{useremail}
	</select>
	<select id="getPw" resultType="string">
		select userpw from user where useremail = #{useremail}
	</select>
	<update id="pwChanges">
		update user set userpw=#{userpw} where useremail=#{useremail}
	</update>
	<update id="nameCn">
		update user set username=#{username} where useremail=#{useremail}
	</update>
	<update id="zipCn">
		update user set postnum=#{postnum}, addr=#{addr}, detailaddress=#{detailaddress}, seealso=#{seealso} where useremail=#{useremail}
	</update>
	<delete id="bye">
		delete from user where useremail = #{useremail}	
	</delete>
	<!-- 리뷰 매퍼 -->
	<insert id="review">
  		insert into review (useremail,username,productnum,reviewcontents) values(#{useremail},#{username},#{productnum},#{reviewcontents})
  	</insert>
  	<select id="getReviewnum" resultType="_int">
  		select max(reviewnum) from review
  	</select>
  	<update id="reviewModify">
  		update review set reviewcontents = #{reviewcontents} where reviewnum = #{reviewnum}
  	</update>
	<delete id="reviewDelete">
		delete from review where reviewnum = #{reviewnum}
	</delete>
	
	<!-- 회원 목록 -->
    <select id="getList" resultType="com.my.domain.UserDTO">   
        select * from from (
                select useremail, username, postnum, addr,detailaddress, seealso  
                from user order by username desc)
    </select>
    
    <!-- 회원 목록(페이징) -->
    <select id="getListPaging" resultType="com.my.domain.UserDTO">
    
        select * from (
                select useremail, username, postnum, addr,detailaddress, seealso  
                from user order by username desc) as T1 
        <!-- limit ((${pageNum}-1)*${amount}), ${amount} -->
        limit #{skip},#{amount}
    
    </select>
    
    <!-- 전체 회원 수 -->
    <select id="getTotal" resultType="int">
    
        select count(*) from user
    
    </select>
    
    <!-- 회원 삭제 -->
	<delete id="userDelete">
		
			delete from user where useremail = #{useremail}
			
	</delete>
    
</mapper>